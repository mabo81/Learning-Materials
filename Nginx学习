
Nginx官网
http://nginx.org/en/docs/

Nginx相关技术文档
https://baijiahao.baidu.com/s?id=1652608869911988442&wfr=spider&for=pc


Nginx和Apache都是一种 Web服务器。
WEB服务器基于 REST 架构风格，以统一资源描述符（Uniform Resources Identifier）URI 或者统一资源定位符（Uniform Resources Locator）URL 作为沟通依据，
通过 HTTP 协议提供各种网络服务。

Nginx 使用基于事件驱动架构，使得其可以支持数以百万级别的 TCP 连接。
高度的模块化和自由软件许可证使得第三方模块层出不穷（这是个开源的时代啊）。
Nginx 是一个跨平台服务器，可以运行在 Linux、Windows、FreeBSD、Solaris、AIX、Mac OS 等操作系统上。
优秀的设计带来极大的稳定性。

Nginx 是一款自由的、开源的、高性能的 HTTP 服务器和反向代理服务器；同时也是一个 IMAP、POP3、SMTP 代理服务器。
Nginx 可以作为一个 HTTP 服务器进行网站的发布处理，另外 Nginx 可以作为反向代理进行负载均衡的实现。


关于代理
代理概念
所谓代理，是一个代表，一个渠道。
代理过程涉及三个角色，被代理角色，代理角色和目标角色。
被代理角色通过代理角色访问目标角色完成一些任务的过程称为代理操作过程。

代理模式有两种，正向代理和反向代理。
正向代理，代理客户端。正向代理是一个位于客户端和原始服务器(Origin Server)之间的服务器。
客户端向代理发送请求并指定目标(原始服务器)，代理向原始服务器转交请求并将获得的数据内容返回给客户端。
客户端必须要进行一些特别的设置才能使用正向代理。客户端必须设置正向代理服务器，要知道正向代理服务器的 IP 地址，和代理程序的端口。

正向代理的特点是客户端非常明确需要访问的服务器地址；服务器只清楚请求来自哪个代理服务器，而不清楚来自哪个具体的客户端；
正向代理模式屏蔽或者隐藏真实客户端信息。客户端和服务器同属于一个LAN环境。

正向代理的用途：
访问原来无法访问的资源，如 Google。
可以做缓存，加速访问资源。
对客户端访问授权，上网进行认证。代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息。

Tengine官网查看具体信息：http://tengine.taobao.org/

反向代理
多个客户端向服务器发送请求，Nginx反向代理服务器接收到请求之后，按照一定规则分发给后端的业务服务器进行处理。
请求来源是客户端，处理请求的具体服务器是不明确的。
客户端对代理是无感知的，反向代理对外都是透明的，访问者并不知道自己访问的是一个代理。因为客户端不需要任何配置就可以访问。

反向代理，代理服务端。主要用于服务器集群分布式部署的情况下，反向代理隐藏服务器的信息。
反向代理的作用：
保证内网的安全，通常将反向代理作为公网访问地址，Web 服务器是内网。负载均衡，通过反向代理服务器来优化网站的负载。

通常情况下，在实际项目操作时，正向代理和反向代理很有可能会存在同一个应用场景中，
正向代理代理客户端的请求去访问目标服务器，目标服务器是一个反向代理服务器，反向代理多台真实的业务处理服务器。


负载均衡
Nginx作为反向代理服务器，依据一定规则进行请求分发。
客户端发送的、Nginx 反向代理服务器接收到的请求数量，就是负载量。请求数量按照一定的规则进行分发，到达不同服务器处理的规则，就是一种均衡规则。
将服务器接收到的请求按照规则分发的过程，称为负载均衡。

在实际项目操作过程中，负载均衡有两种，硬件负载均衡和软件负载均衡。
硬件负载均衡也称为硬负载，如 F5 负载均衡，相对造价昂贵成本较高。
但是数据的稳定性安全性等等有非常好的保障，如中国移动中国联通这样的公司才会选择硬负载进行操作。
一般公司考虑到成本原因，会选择使用软件负载均衡，软件负载均衡是利用现有技术结合主机硬件实现的一种消息队列分发机制。

Nginx负载均衡算法
轮询算法，接收到的请求按照顺序逐一分配到不同的后端服务器。
ip_hash：每个请求按照发起客户端的 ip 的 hash 结果进行匹配，每个固定 ip 地址的客户端总会访问到同一个后端服务器。
在一定程度上解决了集群部署环境下 Session 共享的问题。

fair：智能调整调度算法，动态的根据后端服务器的请求处理到响应的时间进行均衡分配。
响应时间短处理效率高的服务器分配到请求的概率高，响应时间长处理效率低的服务器分配到的请求少，它是结合了前两者的优点的一种调度算法。
但是需要注意的是 Nginx 默认不支持 fair 算法，如果要使用这种调度算法，请安装 upstream_fair 模块。
url_hash：按照访问的 URL 的 hash 结果分配请求，每个请求的 URL 会指向后端固定的某个服务器，可以在 Nginx 作为静态服务器的情况下提高缓存效率。
同样要注意 Nginx 默认不支持这种调度算法，要使用的话需要安装 Nginx 的 hash 软件包。





